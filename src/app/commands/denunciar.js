import { MessageEmbed } from 'discord.js';
import moment from 'moment';

import knex from '../database';
import configuration from '../../../configure';

import checkUserHasPermission from '../utils/checkUserHasPermission';

class Denunciar {
	constructor() {
		this.config = {
			name: 'denunciar',
			aliases: [],
			help:
				'Com esse comando voc√™ pode denunciar um usu√°rio que quebrou nossas regras.',
			requiredPermissions: [],
		};

		this.run = async ({ msg, bot, args, prefix }) => {
			const { channel } = msg;

			if (args.length > 0) {
				const userMention =
					msg.mentions.members.first() || msg.guild.members.cache.get(args[0]);

				if (!userMention) {
					channel.send(
						`‚ÅâÔ∏è Voc√™ digitou um usu√°rio inv√°lido, porfavor digite dessa forma \`${prefix}denunciar {@user/user_id}\` ‚ÅâÔ∏è`
					);
					return 'O usu√°rio mencionou um usu√°rio inv√°lido.';
				} else {
					try {
						const channel_base = await knex('channels').where({
							function: 'denuncias',
						});

						if (channel_base.length <= 0) {
							channel.send(
								`‚ÅâÔ∏è <@${msg.author.id}>, nenhum canal registrado para receber den√∫ncias. ‚ÅâÔ∏è`
							);
							return 'Nenhum canal registrado para receber den√∫ncias.';
						}

						channel.send(
							`‚ùó Digite o motivo da den√∫ncia ao usu√°rio \`${userMention.user.username}#${userMention.user.discriminator}\`. (2 Minutos) (Obrigat√≥rio) ‚ùó`
						);
						channel.send(
							`Digite \`cancelar\` para sair da sess√£o de den√∫ncia.`
						);
						const filterReason = (m) => m.author.id === msg.author.id;
						const collectorReason = channel.createMessageCollector(
							filterReason,
							{
								time: 1000 * 120,
								max: 1,
							}
						);

						collectorReason.on('collect', (messageReason) => {
							messageReason.delete().catch(() => {});
							if (messageReason.content.toLowerCase() === 'cancelar') {
								channel.send(
									'‚ùå Voc√™ saiu da sess√£o de den√∫ncia com sucesso, voc√™ pode abrir outra a qualquer momento. ‚ùå'
								);
								return;
							}
							channel.send(
								`‚ùó Agora envie links para comprovar sua den√∫ncia (Obrigat√≥rio) ‚ùó`
							);

							const filterEvidences = (m) => m.author.id === msg.author.id;
							const collectorEvidences = channel.createMessageCollector(
								filterEvidences,
								{
									time: 1000 * 120,
									max: 1,
								}
							);

							collectorEvidences.on('collect', (messageEvidences) => {
								messageEvidences.delete().catch(() => {});

								if (
									messageEvidences.content.includes('http://') ||
									messageEvidences.content.includes('https://')
								) {
									const previewEmbed = new MessageEmbed()
										.setTitle('üì£ **Den√∫ncia (Preview)** üì£')
										.setDescription(`**\nMotivo ¬ª** ${messageReason.content}`)
										.setThumbnail(bot.user.avatarURL())
										.addField(
											'**Provas ¬ª **',
											`\`\`\`yaml\n${messageEvidences}\`\`\``
										)
										.addField(
											'**Usu√°rio denunciado ¬ª **',
											`${userMention.user.tag}`
										)
										.addField('**Author ¬ª **', `${messageReason.author.tag}`)
										.addField(
											`**Criado em ¬ª ** \`${moment().format(
												'DD/MM/YYYY, h:mm:ss a'
											)}\``,
											'\u200B'
										)
										.setTimestamp()
										.setFooter(
											`Copyright ¬© 2020 ${bot.user.username}`,
											bot.user.avatarURL()
										);

									channel.send(previewEmbed);
									channel_base.map((channelComplaint) => {
										const channelInGuild = msg.guild.channels.cache.get(
											channelComplaint.channel_id
										);

										if (channelInGuild) {
											const adminEmbedBanned = previewEmbed;
											adminEmbedBanned
												.addField(
													'Clique em ‚úÖ para confirmar a den√∫ncia e banir o usu√°rio',
													'Clique em ‚ùå para cancelar a den√∫ncia assim o usu√°rio n√£o ser√° banido'
												)
												.setTitle('üì£ **Den√∫ncia ** üì£');
											channelInGuild
												.send(previewEmbed)
												.then(async (messageForAdmin) => {
													await messageForAdmin.react('‚úÖ');
													await messageForAdmin.react('‚ùå');

													const filter = (reaction, user) => {
														const userReacting = msg.guild.members.cache.get(
															user.id
														);
														return (
															(reaction.emoji.name === '‚úÖ' ||
																reaction.emoji.name === '‚ùå') &&
															user.id !== msg.author.id &&
															checkUserHasPermission(
																'BAN_MEMBERS',
																userReacting
															)
														);
													};
													const collector = messageForAdmin.createReactionCollector(
														filter
													);

													collector.on('collect', async (reaction, user) => {
														switch (reaction.emoji.name) {
															case '‚úÖ':
																messageForAdmin.delete().catch(() => {});
																await messageForAdmin.channel.send(
																	'üéâ O usu√°rio foi banido com sucesso! Obrigado pela colabora√ß√£o üéâ'
																);
																await msg.author.send(
																	`üéâ Parab√©ns sua den√∫ncia ao usu√°rio \`${userMention.user.username}#${userMention.user.discriminator}\` foi aprovada, o usu√°rio j√° foi banido de nosso discord, por \`${user.username}#${user.discriminator}\`. üéâ`
																);
																await msg.author.send(
																	`Agradecemos pela sua colabora√ß√£o e pedimos que continue a reportar novos poss√≠veis infratores.`
																);
																await userMention.user.send(
																	`‚ùå Voc√™ foi den√∫nciado e recebeu um ban, de nosso servidor \`${msg.channel.guild.name}\`, veja a den√∫ncia logo abaixo ‚ùå`
																);
																await userMention.user.send(previewEmbed);
																userMention.ban();
																break;
															case '‚ùå':
																messageForAdmin.channel.send(
																	'üéâ O usu√°rio foi liberado com sucesso! Obrigado pela colabora√ß√£o üéâ'
																);
																msg.author.send(
																	`‚ùå Infelizmente sua den√∫ncia ao usu√°rio \`${userMention.user.username}#${userMention.user.discriminator}\` foi desaprovada, caso tenha alguma d√∫vida entre em contato com \`${user.username}#${user.discriminator}\`. ‚ùå`
																);
																msg.author.send(
																	`Agradecemos pela sua colabora√ß√£o e pedimos que continue a reportar novos poss√≠veis infratores.`
																);
																messageForAdmin.delete().catch(() => {});
																break;
														}
													});
												});
										}
									});
									return `O usu√°rio ${msg.author.username} delatou o usu√°rio ${userMention.user.username} por descumprir as regras.`;
								} else {
									channel.send(
										'Voc√™ n√£o incluiu links de refer√™ncias para imagens/videos, ent√£o sua den√∫ncia foi cancelada por esse motivo.'
									);
									return `O usu√°rio ${m.author.username} n√£o incluiu provas em sua den√∫ncia.`;
								}
							});
						});
					} catch (error) {
						console.log(error);
						channel.send(
							configuration.comandos.lock.possivelErro
								.replace('$MENTION_USER_SEND', `<@${msg.author.id}>`)
								.replace('$USERNAME', msg.member.user.username)
								.replace('$USER_TAG', msg.member.user.discriminator)
								.replace('$ERROR_MESSAGE', error.message)
						);
						return 'Houve um erro ao se comunicar com o banco de dados.';
					}
				}
			} else {
				channel.send(
					`‚ÅâÔ∏è Sintaxe incorreta, use dessa forma \`${prefix}denunciar {@user/user_id}\`, ap√≥s executar o comando iniciar√° uma sess√£o de perguntas para a denuncia ser conclu√≠da ‚ÅâÔ∏è`
				);
				return 'O usu√°rio digitou o comando em um sintaxe incorreta.';
			}
		};
	}
}
// $denunciar {user} {motivo}

module.exports = new Denunciar();
